# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines bellow are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./... d       
builds:
  - env:
      - CGO_ENABLED=0
    flags: 
      - -trimpath
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
  - id: linux
    binary: linux_binary
    goos: [linux]
    goarch: [amd64, arm64]
  - id: macos
    binary: macos_binary
    goos: [darwin]
    goarch: [amd64, arm64]
  - id: freebsd
    binary: freebsd_binary
    goos: [freebsd]
    goarch: [amd64, arm]
  - id: openbsd
    binary: openbsd_binary
    goos: [openbsd]
    goarch: [amd64]
  - id: solaris
    binary: solaris_binary
    goos: [solaris]
    goarch: [amd64]
  - id: windows
    binary: windows_binary
    goos: [windows]
    goarch: [amd64]
archives:
  - id: linux_zip
    builds: [linux_binary]
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    format: zip
  - id: macos_zip
    builds: [macos_binary]
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    format: zip
  - id: freebsd_zip
    builds: [freebsd_binary]
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    format: zip
  - id: openbsd_zip
    builds: [openbsd_binary]  
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    format: zip
  - id: solaris_zip
    builds: [solaris_binary]
    format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
  - id: windows_zip 
    builds: [windows_binary]
    format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this is a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
